{"_id": "685ad216c7195815bd412fb0", "createdDate": "2025-06-24T16:28:06.257Z", "jobID": "eq-449860", "PDFresults": {"report": {"buildInformation": {"releaseDetails": [{"id": "core", "version": "1.28.1", "buildDate": 1745946180000}, {"id": "validation-model", "version": "1.28.1", "buildDate": 1745953500000}, {"id": "gui", "version": "1.28.1", "buildDate": 1748123640000}]}, "jobs": [{"itemDetails": {"name": "/home/pdf-worker/www/dist/scanners/appendix1samplecontractmonitoringplan5-15-19.pdf", "size": 376085}, "validationResult": [{"details": {"passedRules": 1713, "failedRules": 11, "passedChecks": 12854, "failedChecks": 61, "tags": ["paragraph", "metadata", "alt-text", "syntax", "text", "list", "structure", "table", "span", "font"], "ruleSummaries": [{"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Table", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure", "table"], "description": "StructTreeRoot shall not contain <Table>", "object": "SETable", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-P", "testNumber": 1, "status": "failed", "failedChecks": 35, "tags": ["paragraph", "structure"], "description": "StructTreeRoot shall not contain <P>", "object": "SEP", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[0](33 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[1](36 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[2](37 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[3](38 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[4](39 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[5](40 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[6](46 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[7](52 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[8](53 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[9](54 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[10](60 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[11](61 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[12](62 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[13](63 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[14](64 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[16](72 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[17](73 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[18](74 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[19](75 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[20](76 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[21](77 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[22](78 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[23](79 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[24](81 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[25](82 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[26](83 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[27](84 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[28](85 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[29](86 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[30](87 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[32](210 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[33](211 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[34](212 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[35](213 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[36](214 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-L", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["list", "structure"], "description": "StructTreeRoot shall not contain <L>", "object": "SEL", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[15](65 0 obj SEL L)", "errorMessage": "StructTreeRoot contains <L>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.1", "testNumber": 2, "status": "failed", "failedChecks": 1, "tags": ["metadata"], "description": "The Catalog dictionary of a conforming file shall contain the Metadata key whose value is a metadata stream as defined in ISO 32000-2:2020, 14.3. The metadata stream dictionary shall contain entry Type with value /Metadata and entry Subtype with value /XML", "object": "PDDocument", "test": "containsMetadata == true", "checks": [{"status": "failed", "context": "root/document[0]", "errorMessage": "The document catalog dictionary doesn't contain metadata key or metadata stream dictionary does not contain either entry Type with value /Metadata or entry Subtype with value /XML", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "The structure tree root shall contain a single Document structure element as its only child, as specified in ISO 32000-2:2020, Annex L and ISO/TS 32005", "object": "PDStructTreeRoot", "test": "kidsStandardTypes == 'Document'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)", "errorMessage": "The structure tree root contains P,P,P,P,P,P,P,P,P,P,P,P,P,P,P,L,P,P,P,P,P,P,P,P,P,P,P,P,P,P,P,Table,P,P,P,P,P element(s) instead of a single Document structure element", "errorArguments": ["P,P,P,P,P,P,P,P,P,P,P,P,P,P,P,L,P,P,P,P,P,P,P,P,P,P,P,P,P,P,P,Table,P,P,P,P,P"]}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Part", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall not contain <Part>", "object": "SEPart", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)", "errorMessage": "StructTreeRoot contains <Part>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. TR-Span", "testNumber": 1, "status": "failed", "failedChecks": 15, "tags": ["structure", "span"], "description": "<TR> shall not contain <Span>", "object": "SESpan", "test": "parentStandardType != 'TR'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[0](90 0 obj SETR TR)/K[0](91 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[1](98 0 obj SETR TR)/K[0](99 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[2](106 0 obj SETR TR)/K[0](107 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[3](114 0 obj SETR TR)/K[0](115 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[4](122 0 obj SETR TR)/K[0](123 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[5](130 0 obj SETR TR)/K[0](131 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[6](138 0 obj SETR TR)/K[0](139 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[7](146 0 obj SETR TR)/K[0](147 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[8](154 0 obj SETR TR)/K[0](155 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[9](162 0 obj SETR TR)/K[0](163 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[10](170 0 obj SETR TR)/K[0](171 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[11](178 0 obj SETR TR)/K[0](179 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[12](186 0 obj SETR TR)/K[0](187 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[13](194 0 obj SETR TR)/K[0](195 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)/K[0](32 0 obj SEPart Part)/K[31](88 0 obj SETable Table)/K[0](89 0 obj SETBody TBody)/K[14](202 0 obj SETR TR)/K[0](203 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["syntax"], "description": "The ViewerPreferences dictionary of the document catalog dictionary shall be present and shall contain at least the DisplayDocTitle key with a value of true, as described in ISO 32000-2:2020, Table 147", "object": "CosDocument", "test": "DisplayDocTitle == true", "checks": [{"status": "failed", "context": "root", "errorMessage": "ViewerPreferences dictionary is not present in the document Catalog, or DisplayDocTitle key is set to false or is not present in the ViewerPreferences dictionary (ViewerPreferences = null, DisplayDocTitle = null)", "errorArguments": [null, null]}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.4.5.5.1", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["font"], "description": "The font programs for all fonts used for rendering within a conforming file shall be embedded within that file, as defined in ISO 32000-2:2020, 9.9", "object": "PDFont", "test": "Subtype == \"Type3\" || Subtype == \"Type0\" || renderingMode == 3 || containsFontFile == true", "checks": [{"status": "failed", "context": "root/document[0]/pages[0](3 0 obj PDPage)/contentStream[0](4 0 obj PDSemanticContentStream)/operators[1460]/font[0](ArialMT)", "errorMessage": "The font program is not embedded", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.4.3", "testNumber": 1, "status": "failed", "failedChecks": 3, "tags": ["alt-text", "text"], "description": "In all cases, where real content maps to Unicode PUA values, an ActualText or Alt entry shall be present", "object": "Glyph", "test": "isRealContent == false || unicodePUA == false || actualTextPresent == true || altPresent == true", "checks": [{"status": "failed", "context": "root/document[0]/pages[0](3 0 obj PDPage)/contentStream[0](4 0 obj PDSemanticContentStream)/operators[1448]/usedGlyphs[0](SymbolMT SymbolMT 120 0 473073770 0 true)", "errorMessage": "Real content maps to Unicode PUA values, but ActualText and Alt entry are not present", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/pages[0](3 0 obj PDPage)/contentStream[0](4 0 obj PDSemanticContentStream)/operators[1582]/usedGlyphs[0](SymbolMT SymbolMT 120 0 1280128554 0 true)", "errorMessage": "Real content maps to Unicode PUA values, but ActualText and Alt entry are not present", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/pages[0](3 0 obj PDPage)/contentStream[0](4 0 obj PDSemanticContentStream)/operators[1692]/usedGlyphs[0](SymbolMT SymbolMT 120 0 1409342262 0 true)", "errorMessage": "Real content maps to Unicode PUA values, but ActualText and Alt entry are not present", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Document", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall contain exactly one <Document>", "object": "PDStructTreeRoot", "test": "kidsStandardTypes.split('&').filter(elem => elem == 'Document').length == 1", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](29 0 obj PDStructTreeRoot)", "errorMessage": "StructTreeRoot either doesn't contain or contains more than one <Document>", "errorArguments": []}]}]}, "jobEndStatus": "normal", "profileName": "PDF/UA-2 + Tagged PDF validation profile", "statement": "PDF file is not compliant with Validation Profile requirements.", "compliant": false}], "processingTime": {"start": 1750782483357, "finish": 1750782486063, "duration": "00:00:02.706", "difference": 2706}}], "batchSummary": {"duration": {"start": 1750782483072, "finish": 1750782486197, "duration": "00:00:03.125", "difference": 3125}, "totalJobs": 1, "outOfMemory": 0, "veraExceptions": 0, "failedEncryptedJobs": 0, "failedParsingJobs": 0, "validationSummary": {"nonCompliantPdfaCount": 1, "compliantPdfaCount": 0, "failedJobCount": 0, "totalJobCount": 1, "successfulJobCount": 1}, "featuresSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "repairSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "multiJob": false}}}}