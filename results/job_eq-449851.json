{"_id": "685ad2001449e0fc48d7c4a9", "createdDate": "2025-06-24T16:27:44.799Z", "jobID": "eq-449851", "PDFresults": {"report": {"buildInformation": {"releaseDetails": [{"id": "core", "version": "1.28.1", "buildDate": 1745946180000}, {"id": "validation-model", "version": "1.28.1", "buildDate": 1745953500000}, {"id": "gui", "version": "1.28.1", "buildDate": 1748123640000}]}, "jobs": [{"itemDetails": {"name": "/home/pdf-worker/www/dist/scanners/UIC-DRC-Disability-Verification-Form.pdf", "size": 397253}, "validationResult": [{"details": {"passedRules": 1714, "failedRules": 10, "passedChecks": 13500, "failedChecks": 57, "tags": ["paragraph", "metadata", "syntax", "structure", "table", "span"], "ruleSummaries": [{"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.26", "testNumber": 3, "status": "failed", "failedChecks": 2, "tags": ["structure", "table"], "description": "Tables shall be regular. Table rows shall have the same number of columns (taking into account column spans)", "object": "SETable", "test": "numberOfRowWithWrongColumnSpan == null || wrongColumnSpan != null", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[12](74 0 obj SETable Table)", "errorMessage": "Table rows 1 and 5 span different number of columns", "errorArguments": ["5"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[14](103 0 obj SETable Table)", "errorMessage": "Table rows 1 and 3 span different number of columns", "errorArguments": ["3"]}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. TR-Span", "testNumber": 1, "status": "failed", "failedChecks": 18, "tags": ["structure", "span"], "description": "<TR> shall not contain <Span>", "object": "SESpan", "test": "parentStandardType != 'TR'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[10](49 0 obj SETable Table)/K[0](50 0 obj SETR TR)/K[3](58 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[10](49 0 obj SETable Table)/K[1](59 0 obj SETR TR)/K[2](65 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[10](49 0 obj SETable Table)/K[2](66 0 obj SETR TR)/K[2](72 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[12](74 0 obj SETable Table)/K[0](75 0 obj SETR TR)/K[1](78 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[12](74 0 obj SETable Table)/K[1](79 0 obj SETR TR)/K[1](83 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[12](74 0 obj SETable Table)/K[2](84 0 obj SETR TR)/K[1](88 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[12](74 0 obj SETable Table)/K[3](89 0 obj SETR TR)/K[1](93 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[12](74 0 obj SETable Table)/K[4](94 0 obj SETR TR)/K[2](100 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[14](103 0 obj SETable Table)/K[0](104 0 obj SETR TR)/K[1](107 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[14](103 0 obj SETable Table)/K[1](108 0 obj SETR TR)/K[1](112 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[14](103 0 obj SETable Table)/K[2](113 0 obj SETR TR)/K[2](119 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[14](103 0 obj SETable Table)/K[3](120 0 obj SETR TR)/K[1](128 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[16](130 0 obj SETable Table)/K[0](131 0 obj SETR TR)/K[1](134 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[16](130 0 obj SETable Table)/K[1](135 0 obj SETR TR)/K[1](146 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[16](130 0 obj SETable Table)/K[2](147 0 obj SETR TR)/K[1](158 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[16](130 0 obj SETable Table)/K[3](159 0 obj SETR TR)/K[1](170 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[18](173 0 obj SETable Table)/K[0](174 0 obj SETR TR)/K[1](179 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[18](173 0 obj SETable Table)/K[1](180 0 obj SETR TR)/K[1](195 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Document", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall contain exactly one <Document>", "object": "PDStructTreeRoot", "test": "kidsStandardTypes.split('&').filter(elem => elem == 'Document').length == 1", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)", "errorMessage": "StructTreeRoot either doesn't contain or contains more than one <Document>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["syntax"], "description": "The ViewerPreferences dictionary of the document catalog dictionary shall be present and shall contain at least the DisplayDocTitle key with a value of true, as described in ISO 32000-2:2020, Table 147", "object": "CosDocument", "test": "DisplayDocTitle == true", "checks": [{"status": "failed", "context": "root", "errorMessage": "ViewerPreferences dictionary is not present in the document Catalog, or DisplayDocTitle key is set to false or is not present in the ViewerPreferences dictionary (ViewerPreferences = null, DisplayDocTitle = null)", "errorArguments": [null, null]}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.1", "testNumber": 2, "status": "failed", "failedChecks": 1, "tags": ["metadata"], "description": "The Catalog dictionary of a conforming file shall contain the Metadata key whose value is a metadata stream as defined in ISO 32000-2:2020, 14.3. The metadata stream dictionary shall contain entry Type with value /Metadata and entry Subtype with value /XML", "object": "PDDocument", "test": "containsMetadata == true", "checks": [{"status": "failed", "context": "root/document[0]", "errorMessage": "The document catalog dictionary doesn't contain metadata key or metadata stream dictionary does not contain either entry Type with value /Metadata or entry Subtype with value /XML", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Part", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall not contain <Part>", "object": "SEPart", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)", "errorMessage": "StructTreeRoot contains <Part>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "The structure tree root shall contain a single Document structure element as its only child, as specified in ISO 32000-2:2020, Annex L and ISO/TS 32005", "object": "PDStructTreeRoot", "test": "kidsStandardTypes == 'Document'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)", "errorMessage": "The structure tree root contains P,P,P,P,P,P,P,P,P,P,Table,P,Table,P,Table,P,Table,P,Table,P,P,P,P,P,P,P,P,P,P,P,P element(s) instead of a single Document structure element", "errorArguments": ["P,P,P,P,P,P,P,P,P,P,Table,P,Table,P,Table,P,Table,P,Table,P,P,P,P,P,P,P,P,P,P,P,P"]}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-P", "testNumber": 1, "status": "failed", "failedChecks": 26, "tags": ["paragraph", "structure"], "description": "StructTreeRoot shall not contain <P>", "object": "SEP", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[0](37 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[1](40 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[2](41 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[3](42 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[4](43 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[5](44 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[6](45 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[7](46 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[8](47 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[9](48 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[11](73 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[13](101 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[15](129 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[17](171 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[19](196 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[20](197 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[21](198 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[22](199 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[23](200 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[24](201 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[25](202 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[26](208 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[27](209 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[28](210 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[29](211 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[30](212 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Table", "testNumber": 1, "status": "failed", "failedChecks": 5, "tags": ["structure", "table"], "description": "StructTreeRoot shall not contain <Table>", "object": "SETable", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[10](49 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[12](74 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[14](103 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[16](130 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[18](173 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.26", "testNumber": 4, "status": "failed", "failedChecks": 1, "tags": ["structure", "table"], "description": "Tables shall be regular. Table rows shall have the same number of columns (taking into account column spans)", "object": "SETable", "test": "numberOfRowWithWrongColumnSpan == null || wrongColumnSpan == null", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](33 0 obj PDStructTreeRoot)/K[0](36 0 obj SEPart Part)/K[10](49 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns (3 and 2 respectively)", "errorArguments": ["2", "3", "2"]}]}]}, "jobEndStatus": "normal", "profileName": "PDF/UA-2 + Tagged PDF validation profile", "statement": "PDF file is not compliant with Validation Profile requirements.", "compliant": false}], "processingTime": {"start": 1750782462072, "finish": 1750782464608, "duration": "00:00:02.536", "difference": 2536}}], "batchSummary": {"duration": {"start": 1750782461828, "finish": 1750782464733, "duration": "00:00:02.905", "difference": 2905}, "totalJobs": 1, "outOfMemory": 0, "veraExceptions": 0, "failedEncryptedJobs": 0, "failedParsingJobs": 0, "validationSummary": {"nonCompliantPdfaCount": 1, "compliantPdfaCount": 0, "failedJobCount": 0, "totalJobCount": 1, "successfulJobCount": 1}, "featuresSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "repairSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "multiJob": false}}}}