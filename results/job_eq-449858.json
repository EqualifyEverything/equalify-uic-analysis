{"_id": "685ad213eb03a9e478ff523e", "createdDate": "2025-06-24T16:28:03.390Z", "jobID": "eq-449858", "PDFresults": {"report": {"buildInformation": {"releaseDetails": [{"id": "core", "version": "1.28.1", "buildDate": 1745946180000}, {"id": "validation-model", "version": "1.28.1", "buildDate": 1745953500000}, {"id": "gui", "version": "1.28.1", "buildDate": 1748123640000}]}, "jobs": [{"itemDetails": {"name": "/home/pdf-worker/www/dist/scanners/Equity-Based-Criteria-for-Neighborhood-CIP_050416-highlight.pdf", "size": 382915}, "validationResult": [{"details": {"passedRules": 1709, "failedRules": 15, "passedChecks": 36861, "failedChecks": 153, "tags": ["paragraph", "figure", "metadata", "alt-text", "syntax", "list", "structure", "table", "span", "font"], "ruleSummaries": [{"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.28.2", "testNumber": 1, "status": "failed", "failedChecks": 6, "tags": ["figure", "alt-text", "structure"], "description": "A Figure structure element shall have at least one of the following properties: a) an alternate description (Alt property), as specified in ISO 32000-2:2020, 14.9.3; b) a replacement text (ActualText property) that represents the content enclosed by the Figure structure element", "object": "SEFigure", "test": "Alt != null || ActualText != null", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)/K[0](57 0 obj SEFigure Figure)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)/K[1](72 0 obj SEFigure Figure)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)/K[2](75 0 obj SEFigure Figure)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)/K[3](87 0 obj SEFigure Figure)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)/K[4](90 0 obj SEFigure Figure)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. TR-Span", "testNumber": 1, "status": "failed", "failedChecks": 38, "tags": ["structure", "span"], "description": "<TR> shall not contain <Span>", "object": "SESpan", "test": "parentStandardType != 'TR'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[0](111 0 obj SETR TR)/K[2](116 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[1](117 0 obj SETR TR)/K[2](124 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[2](125 0 obj SETR TR)/K[3](132 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[3](133 0 obj SETR TR)/K[3](143 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[4](144 0 obj SETR TR)/K[3](151 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[5](152 0 obj SETR TR)/K[3](162 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[6](163 0 obj SETR TR)/K[2](168 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[7](169 0 obj SETR TR)/K[3](179 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[8](180 0 obj SETR TR)/K[3](187 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)/K[9](188 0 obj SETR TR)/K[3](198 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[34](221 0 obj SETable Table)/K[0](222 0 obj SETR TR)/K[2](227 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[34](221 0 obj SETable Table)/K[1](228 0 obj SETR TR)/K[2](235 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[34](221 0 obj SETable Table)/K[3](241 0 obj SETR TR)/K[2](248 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[44](261 0 obj SETable Table)/K[0](262 0 obj SETR TR)/K[2](267 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[44](261 0 obj SETable Table)/K[1](268 0 obj SETR TR)/K[2](275 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[44](261 0 obj SETable Table)/K[3](281 0 obj SETR TR)/K[2](288 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[53](305 0 obj SETable Table)/K[0](306 0 obj SETR TR)/K[2](311 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[53](305 0 obj SETable Table)/K[1](312 0 obj SETR TR)/K[2](319 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[53](305 0 obj SETable Table)/K[3](325 0 obj SETR TR)/K[2](332 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[63](345 0 obj SETable Table)/K[0](346 0 obj SETR TR)/K[2](351 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[63](345 0 obj SETable Table)/K[1](352 0 obj SETR TR)/K[2](359 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[63](345 0 obj SETable Table)/K[2](360 0 obj SETR TR)/K[2](365 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[63](345 0 obj SETable Table)/K[3](366 0 obj SETR TR)/K[2](373 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[76](389 0 obj SETable Table)/K[0](390 0 obj SETR TR)/K[2](397 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[76](389 0 obj SETable Table)/K[1](398 0 obj SETR TR)/K[2](405 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[76](389 0 obj SETable Table)/K[2](406 0 obj SETR TR)/K[2](411 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[76](389 0 obj SETable Table)/K[3](412 0 obj SETR TR)/K[2](419 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[76](389 0 obj SETable Table)/K[4](420 0 obj SETR TR)/K[2](425 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[76](389 0 obj SETable Table)/K[5](426 0 obj SETR TR)/K[2](433 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[86](445 0 obj SETable Table)/K[0](446 0 obj SETR TR)/K[2](454 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[86](445 0 obj SETable Table)/K[1](455 0 obj SETR TR)/K[2](462 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[86](445 0 obj SETable Table)/K[2](463 0 obj SETR TR)/K[2](468 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[86](445 0 obj SETable Table)/K[3](469 0 obj SETR TR)/K[2](476 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[97](489 0 obj SETable Table)/K[0](490 0 obj SETR TR)/K[2](497 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[97](489 0 obj SETable Table)/K[1](498 0 obj SETR TR)/K[2](505 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[97](489 0 obj SETable Table)/K[2](506 0 obj SETR TR)/K[2](511 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[97](489 0 obj SETable Table)/K[3](512 0 obj SETR TR)/K[2](519 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[97](489 0 obj SETable Table)/K[4](520 0 obj SETR TR)/K[2](525 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.1", "testNumber": 2, "status": "failed", "failedChecks": 1, "tags": ["metadata"], "description": "The Catalog dictionary of a conforming file shall contain the Metadata key whose value is a metadata stream as defined in ISO 32000-2:2020, 14.3. The metadata stream dictionary shall contain entry Type with value /Metadata and entry Subtype with value /XML", "object": "PDDocument", "test": "containsMetadata == true", "checks": [{"status": "failed", "context": "root/document[0]", "errorMessage": "The document catalog dictionary doesn't contain metadata key or metadata stream dictionary does not contain either entry Type with value /Metadata or entry Subtype with value /XML", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "The structure tree root shall contain a single Document structure element as its only child, as specified in ISO 32000-2:2020, Annex L and ISO/TS 32005", "object": "PDStructTreeRoot", "test": "kidsStandardTypes == 'Document'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)", "errorMessage": "The structure tree root contains P,P,P,P,P,P,P,Figure,P,P,P,P,P,P,P,P,P,P,Table,P,P,P,P,P,P,P,L,P,P,P,P,P,P,P,Table,P,L,P,P,P,P,P,P,P,Table,P,L,P,P,P,P,P,P,Table,P,P,L,P,P,P,P,P,P,Table,P,P,P,P,P,L,P,P,P,P,P,P,Table,P,P,L,P,P,P,P,P,P,Table,P,P,L,P,P,P,P,P,P,P,Table,P element(s) instead of a single Document structure element", "errorArguments": ["P,P,P,P,P,P,P,Figure,P,P,P,P,P,P,P,P,P,P,Table,P,P,P,P,P,P,P,L,P,P,P,P,P,P,P,Table,P,L,P,P,P,P,P,P,P,Table,P,L,P,P,P,P,P,P,Table,P,P,L,P,P,P,P,P,P,Table,P,P,P,P,P,L,P,P,P,P,P,P,Table,P,P,L,P,P,P,P,P,P,Table,P,P,L,P,P,P,P,P,P,P,Table,P"]}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.26", "testNumber": 3, "status": "failed", "failedChecks": 1, "tags": ["structure", "table"], "description": "Tables shall be regular. Table rows shall have the same number of columns (taking into account column spans)", "object": "SETable", "test": "numberOfRowWithWrongColumnSpan == null || wrongColumnSpan != null", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)", "errorMessage": "Table rows 1 and 3 span different number of columns", "errorArguments": ["3"]}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Table", "testNumber": 1, "status": "failed", "failedChecks": 8, "tags": ["structure", "table"], "description": "StructTreeRoot shall not contain <Table>", "object": "SETable", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[18](110 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[34](221 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[44](261 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[53](305 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[63](345 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[76](389 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[86](445 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[97](489 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.4.5.5.1", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["font"], "description": "The font programs for all fonts used for rendering within a conforming file shall be embedded within that file, as defined in ISO 32000-2:2020, 9.9", "object": "PDFont", "test": "Subtype == \"Type3\" || Subtype == \"Type0\" || renderingMode == 3 || containsFontFile == true", "checks": [{"status": "failed", "context": "root/document[0]/pages[4](26 0 obj PDPage)/contentStream[0](27 0 obj PDSemanticContentStream)/operators[74]/font[0](Arial,Bold)", "errorMessage": "The font program is not embedded", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. Sect-content", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "<Sect> shall not contain content items", "object": "SESect", "test": "hasContentItems == false", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)/K[4](90 0 obj SEFigure Figure)/K[1](92 0 obj SESect Textbox)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Part", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall not contain <Part>", "object": "SEPart", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)", "errorMessage": "StructTreeRoot contains <Part>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Figure", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["figure", "structure"], "description": "StructTreeRoot shall not contain <Figure>", "object": "SEFigure", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)", "errorMessage": "StructTreeRoot contains <Figure>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Document", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall contain exactly one <Document>", "object": "PDStructTreeRoot", "test": "kidsStandardTypes.split('&').filter(elem => elem == 'Document').length == 1", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)", "errorMessage": "StructTreeRoot either doesn't contain or contains more than one <Document>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-L", "testNumber": 1, "status": "failed", "failedChecks": 7, "tags": ["list", "structure"], "description": "StructTreeRoot shall not contain <L>", "object": "SEL", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[26](207 0 obj SEL L)", "errorMessage": "StructTreeRoot contains <L>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[36](250 0 obj SEL L)", "errorMessage": "StructTreeRoot contains <L>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[46](290 0 obj SEL L)", "errorMessage": "StructTreeRoot contains <L>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[56](335 0 obj SEL L)", "errorMessage": "StructTreeRoot contains <L>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[69](379 0 obj SEL L)", "errorMessage": "StructTreeRoot contains <L>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[79](436 0 obj SEL L)", "errorMessage": "StructTreeRoot contains <L>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[89](479 0 obj SEL L)", "errorMessage": "StructTreeRoot contains <L>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["syntax"], "description": "The ViewerPreferences dictionary of the document catalog dictionary shall be present and shall contain at least the DisplayDocTitle key with a value of true, as described in ISO 32000-2:2020, Table 147", "object": "CosDocument", "test": "DisplayDocTitle == true", "checks": [{"status": "failed", "context": "root", "errorMessage": "ViewerPreferences dictionary is not present in the document Catalog, or DisplayDocTitle key is set to false or is not present in the ViewerPreferences dictionary (ViewerPreferences = null, DisplayDocTitle = null)", "errorArguments": [null, null]}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. Sect-Span", "testNumber": 1, "status": "failed", "failedChecks": 2, "tags": ["structure", "span"], "description": "<Sect> shall not contain <Span>", "object": "SESpan", "test": "parentStandardType != 'Sect'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)/K[0](57 0 obj SEFigure Figure)/K[1](60 0 obj SESect Textbox)/K[0](61 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[7](56 0 obj SEFigure Diagram)/K[2](75 0 obj SEFigure Figure)/K[1](77 0 obj SESect Textbox)/K[0](78 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-P", "testNumber": 1, "status": "failed", "failedChecks": 83, "tags": ["paragraph", "structure"], "description": "StructTreeRoot shall not contain <P>", "object": "SEP", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[0](46 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[1](49 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[2](50 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[3](51 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[4](52 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[5](53 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[6](55 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[8](93 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[9](94 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[10](95 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[11](96 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[12](97 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[13](99 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[14](106 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[15](107 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[16](108 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[17](109 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[19](199 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[20](200 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[21](201 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[22](202 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[23](203 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[24](205 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[25](206 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[27](210 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[28](211 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[29](212 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[30](213 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[31](218 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[32](219 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[33](220 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[35](249 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[37](253 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[38](254 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[39](255 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[40](256 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[41](257 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[42](258 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[43](260 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[45](289 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[47](293 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[48](294 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[49](295 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[50](302 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[51](303 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[52](304 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[54](333 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[55](334 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[57](339 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[58](340 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[59](341 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[60](342 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[61](343 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[62](344 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[64](374 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[65](375 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[66](376 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[67](377 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[68](378 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[70](382 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[71](383 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[72](384 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[73](385 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[74](386 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[75](388 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[77](434 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[78](435 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[80](439 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[81](440 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[82](441 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[83](442 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[84](443 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[85](444 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[87](477 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[88](478 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[90](482 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[91](483 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[92](484 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[93](485 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[94](486 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[95](487 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[96](488 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](42 0 obj PDStructTreeRoot)/K[0](45 0 obj SEPart Part)/K[98](526 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}]}]}, "jobEndStatus": "normal", "profileName": "PDF/UA-2 + Tagged PDF validation profile", "statement": "PDF file is not compliant with Validation Profile requirements.", "compliant": false}], "processingTime": {"start": 1750782480076, "finish": 1750782483204, "duration": "00:00:03.128", "difference": 3128}}], "batchSummary": {"duration": {"start": 1750782479871, "finish": 1750782483341, "duration": "00:00:03.470", "difference": 3470}, "totalJobs": 1, "outOfMemory": 0, "veraExceptions": 0, "failedEncryptedJobs": 0, "failedParsingJobs": 0, "validationSummary": {"nonCompliantPdfaCount": 1, "compliantPdfaCount": 0, "failedJobCount": 0, "totalJobCount": 1, "successfulJobCount": 1}, "featuresSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "repairSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "multiJob": false}}}}