{"_id": "685ad154bdb84d59207817c5", "createdDate": "2025-06-24T16:24:52.865Z", "jobID": "eq-449778", "PDFresults": {"report": {"buildInformation": {"releaseDetails": [{"id": "core", "version": "1.28.1", "buildDate": 1745946180000}, {"id": "validation-model", "version": "1.28.1", "buildDate": 1745953500000}, {"id": "gui", "version": "1.28.1", "buildDate": 1748123640000}]}, "jobs": [{"itemDetails": {"name": "/home/pdf-worker/www/dist/scanners/Scanning-Acoustic-Microscope-Manual.pdf", "size": 783589}, "validationResult": [{"details": {"passedRules": 1717, "failedRules": 7, "passedChecks": 19064, "failedChecks": 46, "tags": ["paragraph", "figure", "metadata", "alt-text", "structure", "font"], "ruleSummaries": [{"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. P-Sect", "testNumber": 1, "status": "failed", "failedChecks": 19, "tags": ["paragraph", "structure"], "description": "<P> shall not contain <Sect>", "object": "SESect", "test": "parentStandardType != 'P'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[12](106 0 obj SEP P)/K[1](108 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[14](110 0 obj SEP P)/K[1](112 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[19](117 0 obj SEP P)/K[1](120 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[22](123 0 obj SEP P)/K[2](126 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[23](127 0 obj SEP P)/K[1](129 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[35](143 0 obj SEP P)/K[1](145 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[38](148 0 obj SEP P)/K[1](150 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[39](151 0 obj SEP P)/K[2](154 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[43](159 0 obj SEP P)/K[1](161 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[46](164 0 obj SEP P)/K[1](166 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[52](173 0 obj SEP P)/K[1](175 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[54](177 0 obj SEP P)/K[1](179 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[56](181 0 obj SEP P)/K[1](183 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[58](185 0 obj SEP P)/K[3](189 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[58](185 0 obj SEP P)/K[4](190 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[63](195 0 obj SEP P)/K[1](197 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[73](208 0 obj SEP P)/K[2](211 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[83](221 0 obj SEP P)/K[2](224 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[84](225 0 obj SEP P)/K[2](228 0 obj SESect InlineShape)", "errorMessage": "<P> contains <Sect>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.28.2", "testNumber": 1, "status": "failed", "failedChecks": 4, "tags": ["figure", "alt-text", "structure"], "description": "A Figure structure element shall have at least one of the following properties: a) an alternate description (Alt property), as specified in ISO 32000-2:2020, 14.9.3; b) a replacement text (ActualText property) that represents the content enclosed by the Figure structure element", "object": "SEFigure", "test": "Alt != null || ActualText != null", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[2](73 0 obj SEFigure Figure)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[28](135 0 obj SEFigure Figure)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[30](137 0 obj SEFigure Figure)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[31](138 0 obj SEFigure Figure)", "errorMessage": "Figure structure element neither has an alternate description nor a replacement text", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.1", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["metadata"], "description": "The Metadata stream as specified in ISO 32000-2:2020, 14.3 in the document catalog dictionary shall contain a dc:title entry", "object": "MainXMPPackage", "test": "dc_title != null", "checks": [{"status": "failed", "context": "root/document[0]/metadata[0](244 0 obj PDMetadata)/XMPPackage[0]", "errorMessage": "Metadata stream does not contain dc:title", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.4.5.5.1", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["font"], "description": "The font programs for all fonts used for rendering within a conforming file shall be embedded within that file, as defined in ISO 32000-2:2020, 9.9", "object": "PDFont", "test": "Subtype == \"Type3\" || Subtype == \"Type0\" || renderingMode == 3 || containsFontFile == true", "checks": [{"status": "failed", "context": "root/document[0]/pages[0](3 0 obj PDPage)/contentStream[0](4 0 obj PDSemanticContentStream)/operators[496]/font[0](ArialMT)", "errorMessage": "The font program is not embedded", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. Sect-content", "testNumber": 1, "status": "failed", "failedChecks": 19, "tags": ["structure"], "description": "<Sect> shall not contain content items", "object": "SESect", "test": "hasContentItems == false", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[12](106 0 obj SEP P)/K[1](108 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[14](110 0 obj SEP P)/K[1](112 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[19](117 0 obj SEP P)/K[1](120 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[22](123 0 obj SEP P)/K[2](126 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[23](127 0 obj SEP P)/K[1](129 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[35](143 0 obj SEP P)/K[1](145 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[38](148 0 obj SEP P)/K[1](150 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[39](151 0 obj SEP P)/K[2](154 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[43](159 0 obj SEP P)/K[1](161 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[46](164 0 obj SEP P)/K[1](166 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[52](173 0 obj SEP P)/K[1](175 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[54](177 0 obj SEP P)/K[1](179 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[56](181 0 obj SEP P)/K[1](183 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[58](185 0 obj SEP P)/K[3](189 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[58](185 0 obj SEP P)/K[4](190 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[63](195 0 obj SEP P)/K[1](197 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[73](208 0 obj SEP P)/K[2](211 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[83](221 0 obj SEP P)/K[2](224 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)/K[0](68 0 obj SEDocument Document)/K[84](225 0 obj SEP P)/K[2](228 0 obj SESect InlineShape)", "errorMessage": "<Sect> contains content item(s)", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "5", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["metadata"], "description": "The PDF/UA version of a file shall be specified in the value of the Metadata entry in the document catalog using the PDF/UA identification schema", "object": "MainXMPPackage", "test": "containsPDFUAIdentification == true", "checks": [{"status": "failed", "context": "root/document[0]/metadata[0](244 0 obj PDMetadata)/XMPPackage[0]", "errorMessage": "The document metadata stream doesn't contain PDF/UA Identification Schema", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.2", "testNumber": 2, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "The structure tree root shall contain a single Document structure element as its only child. The namespace for that element shall be specified as the PDF 2.0 namespace", "object": "PDStructTreeRoot", "test": "kidsStandardTypes != 'Document' || firstChildStandardTypeNamespaceURL == 'http://iso.org/pdf2/ssn'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](64 0 obj PDStructTreeRoot)", "errorMessage": "The structure tree root contains a single Document structure element, but this element is not within the PDF 2.0 namespace (namespace URI = http://iso.org/pdf/ssn)", "errorArguments": ["http://iso.org/pdf/ssn"]}]}]}, "jobEndStatus": "normal", "profileName": "PDF/UA-2 + Tagged PDF validation profile", "statement": "PDF file is not compliant with Validation Profile requirements.", "compliant": false}], "processingTime": {"start": 1750782290492, "finish": 1750782292714, "duration": "00:00:02.222", "difference": 2222}}], "batchSummary": {"duration": {"start": 1750782290298, "finish": 1750782292818, "duration": "00:00:02.520", "difference": 2520}, "totalJobs": 1, "outOfMemory": 0, "veraExceptions": 0, "failedEncryptedJobs": 0, "failedParsingJobs": 0, "validationSummary": {"nonCompliantPdfaCount": 1, "compliantPdfaCount": 0, "failedJobCount": 0, "totalJobCount": 1, "successfulJobCount": 1}, "featuresSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "repairSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "multiJob": false}}}}