{"_id": "685ad008bdb84d59207817a1", "createdDate": "2025-06-24T16:19:20.218Z", "jobID": "eq-449662", "PDFresults": {"report": {"buildInformation": {"releaseDetails": [{"id": "core", "version": "1.28.1", "buildDate": 1745946180000}, {"id": "validation-model", "version": "1.28.1", "buildDate": 1745953500000}, {"id": "gui", "version": "1.28.1", "buildDate": 1748123640000}]}, "jobs": [{"itemDetails": {"name": "/home/pdf-worker/www/dist/scanners/Norms-Report-on-the-CSEQ-08-with-06-and-04-comparisons.pdf", "size": 3343995}, "validationResult": [{"details": {"passedRules": 1716, "failedRules": 8, "passedChecks": 3474654, "failedChecks": 243, "tags": ["metadata", "syntax", "structure", "table", "span", "font"], "ruleSummaries": [{"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.26", "testNumber": 3, "status": "failed", "failedChecks": 54, "tags": ["structure", "table"], "description": "Tables shall be regular. Table rows shall have the same number of columns (taking into account column spans)", "object": "SETable", "test": "numberOfRowWithWrongColumnSpan == null || wrongColumnSpan != null", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[137](302 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[139](1345 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[141](2427 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[142](3692 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[144](4598 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[146](5191 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[147](6503 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[149](7247 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[151](7844 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[153](8432 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[154](9900 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[155](11360 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[156](12820 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[158](13974 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[160](14744 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[162](16213 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[163](17671 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[165](18773 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[166](20274 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[168](21377 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[169](22848 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[170](24306 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[172](25046 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[174](26513 0 obj SETable Table)", "errorMessage": "Table rows 1 and 3 span different number of columns", "errorArguments": ["3"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[176](27585 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[177](29056 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[178](30532 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[180](31648 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[182](32392 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[183](33857 0 obj SETable Table)", "errorMessage": "Table rows 1 and 3 span different number of columns", "errorArguments": ["3"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[184](35288 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[185](36761 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[186](38225 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[188](38964 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[189](40429 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[190](41897 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[192](42629 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[193](44108 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[194](45576 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[196](46319 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[198](47793 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[201](48538 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[203](49692 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[205](50881 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[207](52042 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[209](52726 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[211](53912 0 obj SETable Table)", "errorMessage": "Table rows 1 and 3 span different number of columns", "errorArguments": ["3"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[214](54467 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[215](55942 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[217](57421 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[218](58902 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[220](60376 0 obj SETable Table)", "errorMessage": "Table rows 1 and 2 span different number of columns", "errorArguments": ["2"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[221](61845 0 obj SETable Table)", "errorMessage": "Table rows 1 and 3 span different number of columns", "errorArguments": ["3"]}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[223](63291 0 obj SETable Table)", "errorMessage": "Table rows 1 and 3 span different number of columns", "errorArguments": ["3"]}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "The structure tree root shall contain a single Document structure element as its only child, as specified in ISO 32000-2:2020, Annex L and ISO/TS 32005", "object": "PDStructTreeRoot", "test": "kidsStandardTypes == 'Document'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)", "errorMessage": "The structure tree root contains Sect element(s) instead of a single Document structure element", "errorArguments": ["Sect"]}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.1", "testNumber": 2, "status": "failed", "failedChecks": 1, "tags": ["metadata"], "description": "The Catalog dictionary of a conforming file shall contain the Metadata key whose value is a metadata stream as defined in ISO 32000-2:2020, 14.3. The metadata stream dictionary shall contain entry Type with value /Metadata and entry Subtype with value /XML", "object": "PDDocument", "test": "containsMetadata == true", "checks": [{"status": "failed", "context": "root/document[0]", "errorMessage": "The document catalog dictionary doesn't contain metadata key or metadata stream dictionary does not contain either entry Type with value /Metadata or entry Subtype with value /XML", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. TR-Span", "testNumber": 1, "status": "failed", "failedChecks": 178, "tags": ["structure", "span"], "description": "<TR> shall not contain <Span>", "object": "SESpan", "test": "parentStandardType != 'TR'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[137](302 0 obj SETable Table)/K[6](426 0 obj SETR TR)/K[10](449 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[137](302 0 obj SETable Table)/K[18](693 0 obj SETR TR)/K[10](716 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[137](302 0 obj SETable Table)/K[34](1051 0 obj SETR TR)/K[10](1074 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[137](302 0 obj SETable Table)/K[45](1296 0 obj SETR TR)/K[10](1319 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[139](1345 0 obj SETable Table)/K[8](1509 0 obj SETR TR)/K[10](1532 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[139](1345 0 obj SETable Table)/K[20](1776 0 obj SETR TR)/K[10](1799 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[139](1345 0 obj SETable Table)/K[30](1996 0 obj SETR TR)/K[10](2019 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[139](1345 0 obj SETable Table)/K[42](2263 0 obj SETR TR)/K[10](2286 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[141](2427 0 obj SETable Table)/K[10](2637 0 obj SETR TR)/K[10](2660 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[141](2427 0 obj SETable Table)/K[25](2973 0 obj SETR TR)/K[10](2996 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[141](2427 0 obj SETable Table)/K[38](3263 0 obj SETR TR)/K[10](3286 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[141](2427 0 obj SETable Table)/K[51](3552 0 obj SETR TR)/K[10](3575 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[142](3692 0 obj SETable Table)/K[9](3880 0 obj SETR TR)/K[10](3903 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[142](3692 0 obj SETable Table)/K[22](4169 0 obj SETR TR)/K[10](4193 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[142](3692 0 obj SETable Table)/K[36](4480 0 obj SETR TR)/K[10](4503 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[144](4598 0 obj SETable Table)/K[9](4784 0 obj SETR TR)/K[10](4807 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[144](4598 0 obj SETable Table)/K[22](5073 0 obj SETR TR)/K[10](5096 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[146](5191 0 obj SETable Table)/K[8](5439 0 obj SETR TR)/K[15](5473 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[146](5191 0 obj SETable Table)/K[19](5800 0 obj SETR TR)/K[15](5834 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[146](5191 0 obj SETable Table)/K[33](6264 0 obj SETR TR)/K[15](6298 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[147](6503 0 obj SETable Table)/K[8](6604 0 obj SETR TR)/K[6](6618 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[147](6503 0 obj SETable Table)/K[19](6748 0 obj SETR TR)/K[6](6762 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[147](6503 0 obj SETable Table)/K[30](6895 0 obj SETR TR)/K[6](6909 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[147](6503 0 obj SETable Table)/K[41](7042 0 obj SETR TR)/K[6](7056 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[147](6503 0 obj SETable Table)/K[52](7188 0 obj SETR TR)/K[6](7202 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[149](7247 0 obj SETable Table)/K[8](7343 0 obj SETR TR)/K[6](7357 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[149](7247 0 obj SETable Table)/K[19](7490 0 obj SETR TR)/K[6](7504 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[149](7247 0 obj SETable Table)/K[30](7637 0 obj SETR TR)/K[6](7651 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[149](7247 0 obj SETable Table)/K[41](7785 0 obj SETR TR)/K[6](7799 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[151](7844 0 obj SETable Table)/K[8](7940 0 obj SETR TR)/K[6](7954 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[151](7844 0 obj SETable Table)/K[19](8083 0 obj SETR TR)/K[6](8097 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[151](7844 0 obj SETable Table)/K[30](8229 0 obj SETR TR)/K[6](8243 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[151](7844 0 obj SETable Table)/K[41](8374 0 obj SETR TR)/K[6](8388 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[153](8432 0 obj SETable Table)/K[8](8678 0 obj SETR TR)/K[15](8713 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[153](8432 0 obj SETable Table)/K[19](9039 0 obj SETR TR)/K[15](9073 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[153](8432 0 obj SETable Table)/K[30](9400 0 obj SETR TR)/K[15](9434 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[153](8432 0 obj SETable Table)/K[41](9763 0 obj SETR TR)/K[15](9797 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[154](9900 0 obj SETable Table)/K[8](10140 0 obj SETR TR)/K[15](10174 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[154](9900 0 obj SETable Table)/K[19](10499 0 obj SETR TR)/K[15](10533 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[154](9900 0 obj SETable Table)/K[30](10862 0 obj SETR TR)/K[15](10896 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[154](9900 0 obj SETable Table)/K[41](11223 0 obj SETR TR)/K[15](11257 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[155](11360 0 obj SETable Table)/K[8](11598 0 obj SETR TR)/K[15](11632 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[155](11360 0 obj SETable Table)/K[19](11959 0 obj SETR TR)/K[15](11993 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[155](11360 0 obj SETable Table)/K[30](12320 0 obj SETR TR)/K[15](12354 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[155](11360 0 obj SETable Table)/K[41](12682 0 obj SETR TR)/K[15](12717 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[156](12820 0 obj SETable Table)/K[8](13056 0 obj SETR TR)/K[15](13090 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[156](12820 0 obj SETable Table)/K[20](13447 0 obj SETR TR)/K[15](13481 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[156](12820 0 obj SETable Table)/K[31](13806 0 obj SETR TR)/K[15](13839 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[158](13974 0 obj SETable Table)/K[8](14210 0 obj SETR TR)/K[15](14244 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[158](13974 0 obj SETable Table)/K[19](14570 0 obj SETR TR)/K[15](14604 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[160](14744 0 obj SETable Table)/K[8](14985 0 obj SETR TR)/K[15](15019 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[160](14744 0 obj SETable Table)/K[19](15350 0 obj SETR TR)/K[15](15384 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[160](14744 0 obj SETable Table)/K[30](15713 0 obj SETR TR)/K[15](15747 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[160](14744 0 obj SETable Table)/K[41](16073 0 obj SETR TR)/K[15](16107 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[162](16213 0 obj SETable Table)/K[8](16452 0 obj SETR TR)/K[15](16486 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[162](16213 0 obj SETable Table)/K[19](16809 0 obj SETR TR)/K[15](16843 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[162](16213 0 obj SETable Table)/K[30](17171 0 obj SETR TR)/K[15](17205 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[162](16213 0 obj SETable Table)/K[41](17534 0 obj SETR TR)/K[15](17568 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[163](17671 0 obj SETable Table)/K[8](17912 0 obj SETR TR)/K[15](17946 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[163](17671 0 obj SETable Table)/K[19](18271 0 obj SETR TR)/K[15](18305 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[163](17671 0 obj SETable Table)/K[30](18633 0 obj SETR TR)/K[15](18667 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[165](18773 0 obj SETable Table)/K[8](19014 0 obj SETR TR)/K[15](19048 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[165](18773 0 obj SETable Table)/K[19](19375 0 obj SETR TR)/K[15](19409 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[165](18773 0 obj SETable Table)/K[30](19738 0 obj SETR TR)/K[15](19772 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[165](18773 0 obj SETable Table)/K[42](20136 0 obj SETR TR)/K[15](20170 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[166](20274 0 obj SETable Table)/K[8](20514 0 obj SETR TR)/K[15](20548 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[166](20274 0 obj SETable Table)/K[19](20875 0 obj SETR TR)/K[15](20909 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[166](20274 0 obj SETable Table)/K[30](21238 0 obj SETR TR)/K[15](21272 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[168](21377 0 obj SETable Table)/K[8](21616 0 obj SETR TR)/K[15](21650 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[168](21377 0 obj SETable Table)/K[19](21981 0 obj SETR TR)/K[15](22016 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[168](21377 0 obj SETable Table)/K[30](22348 0 obj SETR TR)/K[15](22382 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[168](21377 0 obj SETable Table)/K[41](22710 0 obj SETR TR)/K[15](22745 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[169](22848 0 obj SETable Table)/K[8](23086 0 obj SETR TR)/K[15](23120 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[169](22848 0 obj SETable Table)/K[19](23443 0 obj SETR TR)/K[15](23477 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[169](22848 0 obj SETable Table)/K[30](23806 0 obj SETR TR)/K[15](23840 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[169](22848 0 obj SETable Table)/K[41](24168 0 obj SETR TR)/K[15](24202 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[170](24306 0 obj SETable Table)/K[8](24546 0 obj SETR TR)/K[15](24580 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[170](24306 0 obj SETable Table)/K[19](24907 0 obj SETR TR)/K[15](24941 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[172](25046 0 obj SETable Table)/K[8](25286 0 obj SETR TR)/K[15](25320 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[172](25046 0 obj SETable Table)/K[19](25648 0 obj SETR TR)/K[15](25682 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[172](25046 0 obj SETable Table)/K[30](26011 0 obj SETR TR)/K[15](26045 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[172](25046 0 obj SETable Table)/K[41](26374 0 obj SETR TR)/K[15](26408 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[174](26513 0 obj SETable Table)/K[7](26719 0 obj SETR TR)/K[15](26754 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[174](26513 0 obj SETable Table)/K[17](27046 0 obj SETR TR)/K[15](27080 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[174](26513 0 obj SETable Table)/K[18](27081 0 obj SETR TR)/K[15](27115 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[174](26513 0 obj SETable Table)/K[29](27446 0 obj SETR TR)/K[15](27480 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[176](27585 0 obj SETable Table)/K[8](27825 0 obj SETR TR)/K[15](27859 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[176](27585 0 obj SETable Table)/K[19](28189 0 obj SETR TR)/K[15](28223 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[176](27585 0 obj SETable Table)/K[30](28554 0 obj SETR TR)/K[15](28588 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[176](27585 0 obj SETable Table)/K[41](28919 0 obj SETR TR)/K[15](28953 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[177](29056 0 obj SETable Table)/K[8](29301 0 obj SETR TR)/K[15](29335 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[177](29056 0 obj SETable Table)/K[19](29661 0 obj SETR TR)/K[15](29695 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[177](29056 0 obj SETable Table)/K[30](30030 0 obj SETR TR)/K[15](30064 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[177](29056 0 obj SETable Table)/K[41](30395 0 obj SETR TR)/K[15](30429 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[178](30532 0 obj SETable Table)/K[8](30779 0 obj SETR TR)/K[15](30813 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[178](30532 0 obj SETable Table)/K[19](31141 0 obj SETR TR)/K[15](31175 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[178](30532 0 obj SETable Table)/K[30](31508 0 obj SETR TR)/K[15](31542 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[180](31648 0 obj SETable Table)/K[8](31890 0 obj SETR TR)/K[15](31924 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[180](31648 0 obj SETable Table)/K[19](32253 0 obj SETR TR)/K[15](32287 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)/K[182](32392 0 obj SETable Table)/K[8](32633 0 obj SETR TR)/K[15](32667 0 obj SESpan Span)", "errorMessage": "<TR> contains <Span>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Sect", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall not contain <Sect>", "object": "SESect", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)/K[0](150 0 obj SESect Sect)", "errorMessage": "StructTreeRoot contains <Sect>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["syntax"], "description": "The ViewerPreferences dictionary of the document catalog dictionary shall be present and shall contain at least the DisplayDocTitle key with a value of true, as described in ISO 32000-2:2020, Table 147", "object": "CosDocument", "test": "DisplayDocTitle == true", "checks": [{"status": "failed", "context": "root", "errorMessage": "ViewerPreferences dictionary is not present in the document Catalog, or DisplayDocTitle key is set to false or is not present in the ViewerPreferences dictionary (ViewerPreferences = null, DisplayDocTitle = null)", "errorArguments": [null, null]}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Document", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall contain exactly one <Document>", "object": "PDStructTreeRoot", "test": "kidsStandardTypes.split('&').filter(elem => elem == 'Document').length == 1", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](148 0 obj PDStructTreeRoot)", "errorMessage": "StructTreeRoot either doesn't contain or contains more than one <Document>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.4.5.5.1", "testNumber": 1, "status": "failed", "failedChecks": 6, "tags": ["font"], "description": "The font programs for all fonts used for rendering within a conforming file shall be embedded within that file, as defined in ISO 32000-2:2020, 9.9", "object": "PDFont", "test": "Subtype == \"Type3\" || Subtype == \"Type0\" || renderingMode == 3 || containsFontFile == true", "checks": [{"status": "failed", "context": "root/document[0]/pages[0](3 0 obj PDPage)/contentStream[0](4 0 obj PDSemanticContentStream)/operators[6]/font[0](Times New Roman,Bold)", "errorMessage": "The font program is not embedded", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/pages[1](7 0 obj PDPage)/contentStream[0](8 0 obj PDSemanticContentStream)/operators[6]/font[0](Times New Roman)", "errorMessage": "The font program is not embedded", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/pages[4](20 0 obj PDPage)/contentStream[0](21 0 obj PDSemanticContentStream)/operators[54]/font[0](Times New Roman,Italic)", "errorMessage": "The font program is not embedded", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/pages[7](31 0 obj PDPage)/contentStream[0](32 0 obj PDSemanticContentStream)/operators[21]/font[0](Arial,BoldItalic)", "errorMessage": "The font program is not embedded", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/pages[7](31 0 obj PDPage)/contentStream[0](32 0 obj PDSemanticContentStream)/operators[48]/font[0](Arial)", "errorMessage": "The font program is not embedded", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/pages[7](31 0 obj PDPage)/contentStream[0](32 0 obj PDSemanticContentStream)/operators[399]/font[0](Arial,Bold)", "errorMessage": "The font program is not embedded", "errorArguments": []}]}]}, "jobEndStatus": "normal", "profileName": "PDF/UA-2 + Tagged PDF validation profile", "statement": "PDF file is not compliant with Validation Profile requirements.", "compliant": false}], "processingTime": {"start": 1750781933038, "finish": 1750781959970, "duration": "00:00:26.932", "difference": 26932}}], "batchSummary": {"duration": {"start": 1750781932283, "finish": 1750781960129, "duration": "00:00:27.846", "difference": 27846}, "totalJobs": 1, "outOfMemory": 0, "veraExceptions": 0, "failedEncryptedJobs": 0, "failedParsingJobs": 0, "validationSummary": {"nonCompliantPdfaCount": 1, "compliantPdfaCount": 0, "failedJobCount": 0, "totalJobCount": 1, "successfulJobCount": 1}, "featuresSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "repairSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "multiJob": false}}}}