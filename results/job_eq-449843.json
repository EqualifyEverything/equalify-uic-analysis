{"_id": "685ad1f21449e0fc48d7c4a7", "createdDate": "2025-06-24T16:27:30.507Z", "jobID": "eq-449843", "PDFresults": {"report": {"buildInformation": {"releaseDetails": [{"id": "core", "version": "1.28.1", "buildDate": 1745946180000}, {"id": "validation-model", "version": "1.28.1", "buildDate": 1745953500000}, {"id": "gui", "version": "1.28.1", "buildDate": 1748123640000}]}, "jobs": [{"itemDetails": {"name": "/home/pdf-worker/www/dist/scanners/Federal%20Pell%20Grant%20Data%20for%202018_2019.pdf", "size": 435662}, "validationResult": [{"details": {"passedRules": 1714, "failedRules": 10, "passedChecks": 5504, "failedChecks": 39, "tags": ["paragraph", "metadata", "syntax", "structure", "table", "span", "font"], "ruleSummaries": [{"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. Sect-Span", "testNumber": 1, "status": "failed", "failedChecks": 9, "tags": ["structure", "span"], "description": "<Sect> shall not contain <Span>", "object": "SESpan", "test": "parentStandardType != 'Sect'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)/K[0](85 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)/K[8](107 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)/K[10](112 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)/K[12](116 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)/K[14](120 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)/K[16](124 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)/K[18](128 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)/K[20](132 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)/K[22](136 0 obj SESpan Span)", "errorMessage": "<Sect> contains <Span>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-P", "testNumber": 1, "status": "failed", "failedChecks": 20, "tags": ["paragraph", "structure"], "description": "StructTreeRoot shall not contain <P>", "object": "SEP", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[0](38 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[1](41 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[2](42 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[4](67 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[5](68 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[6](69 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[7](70 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[8](71 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[9](72 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[10](73 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[11](74 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[12](75 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[13](76 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[14](77 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[15](78 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[16](79 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[17](80 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[21](138 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[22](139 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[23](140 0 obj SEP P)", "errorMessage": "StructTreeRoot contains <P>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Document", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall contain exactly one <Document>", "object": "PDStructTreeRoot", "test": "kidsStandardTypes.split('&').filter(elem => elem == 'Document').length == 1", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)", "errorMessage": "StructTreeRoot either doesn't contain or contains more than one <Document>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.1", "testNumber": 2, "status": "failed", "failedChecks": 1, "tags": ["metadata"], "description": "The Catalog dictionary of a conforming file shall contain the Metadata key whose value is a metadata stream as defined in ISO 32000-2:2020, 14.3. The metadata stream dictionary shall contain entry Type with value /Metadata and entry Subtype with value /XML", "object": "PDDocument", "test": "containsMetadata == true", "checks": [{"status": "failed", "context": "root/document[0]", "errorMessage": "The document catalog dictionary doesn't contain metadata key or metadata stream dictionary does not contain either entry Type with value /Metadata or entry Subtype with value /XML", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.11.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["syntax"], "description": "The ViewerPreferences dictionary of the document catalog dictionary shall be present and shall contain at least the DisplayDocTitle key with a value of true, as described in ISO 32000-2:2020, Table 147", "object": "CosDocument", "test": "DisplayDocTitle == true", "checks": [{"status": "failed", "context": "root", "errorMessage": "ViewerPreferences dictionary is not present in the document Catalog, or DisplayDocTitle key is set to false or is not present in the ViewerPreferences dictionary (ViewerPreferences = null, DisplayDocTitle = null)", "errorArguments": [null, null]}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.2.5.2", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "The structure tree root shall contain a single Document structure element as its only child, as specified in ISO 32000-2:2020, Annex L and ISO/TS 32005", "object": "PDStructTreeRoot", "test": "kidsStandardTypes == 'Document'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)", "errorMessage": "The structure tree root contains P,P,P,Table,P,P,P,P,P,P,P,P,P,P,P,P,P,P,Sect,Sect,Sect,P,P,P element(s) instead of a single Document structure element", "errorArguments": ["P,P,P,Table,P,P,P,P,P,P,P,P,P,P,P,P,P,P,Sect,Sect,Sect,P,P,P"]}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Table", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure", "table"], "description": "StructTreeRoot shall not contain <Table>", "object": "SETable", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[3](43 0 obj SETable Table)", "errorMessage": "StructTreeRoot contains <Table>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Sect", "testNumber": 1, "status": "failed", "failedChecks": 3, "tags": ["structure"], "description": "StructTreeRoot shall not contain <Sect>", "object": "SESect", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[18](81 0 obj SESect Textbox)", "errorMessage": "StructTreeRoot contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[19](84 0 obj SESect Chart)", "errorMessage": "StructTreeRoot contains <Sect>", "errorArguments": []}, {"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)/K[20](137 0 obj SESect Chart)", "errorMessage": "StructTreeRoot contains <Sect>", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 14289-2:2024", "clause": "8.4.5.5.1", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["font"], "description": "The font programs for all fonts used for rendering within a conforming file shall be embedded within that file, as defined in ISO 32000-2:2020, 9.9", "object": "PDFont", "test": "Subtype == \"Type3\" || Subtype == \"Type0\" || renderingMode == 3 || containsFontFile == true", "checks": [{"status": "failed", "context": "root/document[0]/pages[0](3 0 obj PDPage)/contentStream[0](4 0 obj PDSemanticContentStream)/operators[1791]/font[0](TimesNewRomanPSMT)", "errorMessage": "The font program is not embedded", "errorArguments": []}]}, {"ruleStatus": "FAILED", "specification": "ISO 32005:2023", "clause": "Table 5. StructTreeRoot-Part", "testNumber": 1, "status": "failed", "failedChecks": 1, "tags": ["structure"], "description": "StructTreeRoot shall not contain <Part>", "object": "SEPart", "test": "parentStandardType != 'StructTreeRoot'", "checks": [{"status": "failed", "context": "root/document[0]/StructTreeRoot[0](34 0 obj PDStructTreeRoot)/K[0](37 0 obj SEPart Part)", "errorMessage": "StructTreeRoot contains <Part>", "errorArguments": []}]}]}, "jobEndStatus": "normal", "profileName": "PDF/UA-2 + Tagged PDF validation profile", "statement": "PDF file is not compliant with Validation Profile requirements.", "compliant": false}], "processingTime": {"start": 1750782448333, "finish": 1750782450325, "duration": "00:00:01.992", "difference": 1992}}], "batchSummary": {"duration": {"start": 1750782448133, "finish": 1750782450454, "duration": "00:00:02.321", "difference": 2321}, "totalJobs": 1, "outOfMemory": 0, "veraExceptions": 0, "featuresSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "repairSummary": {"failedJobCount": 0, "totalJobCount": 0, "successfulJobCount": 0}, "multiJob": false, "failedEncryptedJobs": 0, "failedParsingJobs": 0, "validationSummary": {"compliantPdfaCount": 0, "failedJobCount": 0, "totalJobCount": 1, "nonCompliantPdfaCount": 1, "successfulJobCount": 1}}}}}